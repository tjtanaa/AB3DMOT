# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TrackletsPacket(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TrackletsPacket()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTrackletsPacket(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TrackletsPacket
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TrackletsPacket
    def FrameId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # TrackletsPacket
    def Count(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # TrackletsPacket
    def LidartsMs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # TrackletsPacket
    def UnixtsMs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # TrackletsPacket
    def Tracklets(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from .Tracklet import Tracklet
            obj = Tracklet()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TrackletsPacket
    def TrackletsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # TrackletsPacket
    def TrackletsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

def Start(builder): builder.StartObject(5)
def TrackletsPacketStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddFrameId(builder, frameId): builder.PrependUint16Slot(0, frameId, 0)
def TrackletsPacketAddFrameId(builder, frameId):
    """This method is deprecated. Please switch to AddFrameId."""
    return AddFrameId(builder, frameId)
def AddCount(builder, count): builder.PrependUint16Slot(1, count, 0)
def TrackletsPacketAddCount(builder, count):
    """This method is deprecated. Please switch to AddCount."""
    return AddCount(builder, count)
def AddLidartsMs(builder, lidartsMs): builder.PrependFloat64Slot(2, lidartsMs, 0.0)
def TrackletsPacketAddLidartsMs(builder, lidartsMs):
    """This method is deprecated. Please switch to AddLidartsMs."""
    return AddLidartsMs(builder, lidartsMs)
def AddUnixtsMs(builder, unixtsMs): builder.PrependFloat64Slot(3, unixtsMs, 0.0)
def TrackletsPacketAddUnixtsMs(builder, unixtsMs):
    """This method is deprecated. Please switch to AddUnixtsMs."""
    return AddUnixtsMs(builder, unixtsMs)
def AddTracklets(builder, tracklets): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(tracklets), 0)
def TrackletsPacketAddTracklets(builder, tracklets):
    """This method is deprecated. Please switch to AddTracklets."""
    return AddTracklets(builder, tracklets)
def StartTrackletsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def TrackletsPacketStartTrackletsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartTrackletsVector(builder, numElems)
def End(builder): return builder.EndObject()
def TrackletsPacketEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)